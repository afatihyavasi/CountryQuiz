{"version":3,"sources":["contexts/CountyContext.js","components/Question/index.js","components/Option/index.js","components/Card/index.js","components/ResultScreen/index.js","components/App/index.js","index.js"],"names":["CountryContext","createContext","CountryContextProvider","children","useState","countries","setCountries","question","setQuestion","options","setOptions","randomCountry","setRandomCountry","questionIndex","setQuestionIndex","trueCounter","setTrueCounter","backgroundColor","setBackgroundColor","useEffect","fetch","then","response","json","pickRandomCountry","countryList","randomNumber","Math","floor","random","length","forEach","country","index","randomQuestion","countryCapitalQuestion","countryFlagQuestion","className","capital","createOptions","src","flag","alt","createFalseOptions","name","push","truthy","sort","values","generateNewQuestion","Provider","value","Question","useContext","Option","bg","handleClick","cn","onClick","Card","map","option","e","target","find","ResultScreen","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff3ae5d.chunk.js","sourcesContent":["import {createContext, useState, useEffect} from 'react';\n\nconst CountryContext = createContext();\n\n//API URL\nconst url = 'https://restcountries.eu/rest/v2/all';\n\nconst CountryContextProvider = ({children}) => {\n    //States\n    const [countries, setCountries] = useState();\n    const [question, setQuestion] = useState();\n    const [options, setOptions] = useState([]);\n    const [randomCountry, setRandomCountry] = useState();\n    const [questionIndex, setQuestionIndex] = useState(1);\n    const [trueCounter, setTrueCounter] = useState(0);\n    const [backgroundColor, setBackgroundColor] = useState('');\n\n    // Get country list with fetch.\n    useEffect(() => {\n        fetch(url)\n            .then(response => response.json())\n            .then(response => setCountries(response))\n    }, [])\n\n    //Picking random country in the countries\n    const pickRandomCountry = (countryList) => {\n        const randomNumber = Math.floor(Math.random() * countryList.length);\n        countryList.forEach((country, index) => {\n            if (index === randomNumber) setRandomCountry(country);\n        })\n    };\n\n    //Generate random question . Ask country capital or country flag.\n    const randomQuestion = () => {\n        const randomBoolean = Math.random() < 0.5;\n        randomBoolean ? countryCapitalQuestion() : countryFlagQuestion();\n\n    }\n\n    const countryCapitalQuestion = () => {\n        setQuestion(<div className='question-container'><strong>{randomCountry.capital}</strong> is the capital of</div>);\n        createOptions();\n    }\n\n    const countryFlagQuestion = () => {\n        setQuestion(<div className='question-container'>\n            <div className=\"image-container\">\n                <img src={randomCountry.flag} alt=\"country-flag\"/>\n            </div>\n            <h5>Which country does this flag belong to?</h5>\n        </div>)\n        createOptions();\n    }\n\n    // Create a false option.\n    const createFalseOptions = () => {\n        const options = [];\n        const randomNumber = Math.floor(Math.random() * countries.length);\n        countries.forEach((country, index) => {\n            if (index === randomNumber && randomCountry.name !== country.name) options.push(country.name)\n        })\n        return options[0];\n    }\n\n    //Create options.\n    const createOptions = () => {\n        setOptions([\n            {\n                name: randomCountry.name,\n                truthy: true,\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            }\n        ].sort(() => .5 - Math.random()));\n    }\n\n    // Generate new question.\n    const generateNewQuestion = () => {\n        setBackgroundColor('');\n        setQuestionIndex(questionIndex + 1);\n        pickRandomCountry(countries);\n        randomQuestion();\n    }\n\n\n    const values = {\n        countries, question, options, setQuestion, setOptions, pickRandomCountry, randomCountry,\n        setRandomCountry, randomQuestion, trueCounter, setTrueCounter, questionIndex, setQuestionIndex,\n        backgroundColor, setBackgroundColor, generateNewQuestion\n    }\n\n    return (\n        <CountryContext.Provider value={values}>\n            {children}\n        </CountryContext.Provider>\n    );\n};\n\nexport {CountryContext, CountryContextProvider}\n\n","import {useContext, useEffect} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css'\n\nconst Question = () => {\n    const {randomQuestion, question} = useContext(CountryContext)\n    useEffect(() => {\n        randomQuestion();\n    }, [])\n\n    if (!question) return <div>Loading</div>;\n\n    return (\n        <div className=\"question\">\n            {question}\n        </div>\n    );\n};\n\nexport default Question;\n","import './index.css';\nimport cn from 'classnames';\n\nconst Option = ({children, bg, truthy, handleClick}) => {\n\n\n    return (\n        <div className='options-container'>\n            <button className={cn(truthy ? bg : '', 'option')} onClick={handleClick}>{children}</button>\n        </div>\n    );\n};\n\nexport default Option;\n","import {useContext, useEffect} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css';\nimport Question from \"../Question\";\nimport Option from \"../Option\";\n\nconst Card = () => {\n\n    const {\n        pickRandomCountry, countries, randomCountry,\n        options, trueCounter, setTrueCounter,\n        setBackgroundColor, generateNewQuestion, backgroundColor,questionIndex\n    } = useContext(CountryContext);\n\n\n    useEffect(() => {\n\n        pickRandomCountry(countries);\n\n    }, [options]);\n\n    const handleClick = (truthy, e) => {\n        if (truthy) {\n            e.target.className = 'true-option';\n            setTrueCounter(trueCounter + 1)\n        } else {\n            e.target.className = 'false-option';\n            options.find((option) => {\n                if (option.truthy) setBackgroundColor('true-option');\n            })\n        }\n    }\n\n    if (!randomCountry) return <div>Loading</div>;\n\n    return (\n        <div className=\"card\">\n            <h1> COUNTRY QUIZ</h1>\n            <div className=\"container\">\n                <Question/>\n                {\n                    options\n                        .map(option => <Option key={option.name}\n                                               bg={backgroundColor}\n                                               handleClick={(e) => handleClick(option.truthy, e)}\n                                               truthy={option.truthy}>{option.name}\n                        </Option>)\n                }\n                <div className=\"button-container\">\n                    <button onClick={generateNewQuestion}>Next</button>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import {useContext} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css';\n\n\nconst ResultScreen = () => {\n\n    const {trueCounter, generateNewQuestion, setTrueCounter, setQuestionIndex} = useContext(CountryContext);\n\n    const handleClick = () => {\n        generateNewQuestion();\n        setQuestionIndex(1);\n        setTrueCounter(0);\n    }\n    return (\n        <div className='result-screen'>\n            <img src='/celebrate.svg' alt='score'/>\n            <h4 className=\"score-text\">You got <span>{trueCounter}</span> correct answer</h4>\n            <button onClick={handleClick}>PLAY AGAIN</button>\n        </div>\n    );\n};\n\nexport default ResultScreen;\n","import Card from \"../Card\";\nimport ResultScreen from \"../ResultScreen\";\nimport './index.css';\n\nimport {useContext} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\n\nconst App = () => {\n\n    const {countries, questionIndex} = useContext(CountryContext);\n\n    if (!countries) return <div>YUKLENIYOR...</div>\n\n    return (\n        <div className='app'>\n            {\n                questionIndex === 6\n                    ? <ResultScreen/>\n                    : <Card/>\n            }\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {CountryContextProvider} from './contexts/CountyContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CountryContextProvider>\n            <App/>\n        </CountryContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}