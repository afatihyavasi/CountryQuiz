{"version":3,"sources":["contexts/CountyContext.js","components/Question/index.js","components/Option/index.js","components/Card/index.js","components/ResultScreen/index.js","components/App/index.js","index.js"],"names":["CountryContext","createContext","CountryContextProvider","children","useState","countries","setCountries","question","setQuestion","options","setOptions","randomCountry","setRandomCountry","questionIndex","setQuestionIndex","trueCounter","setTrueCounter","backgroundColor","setBackgroundColor","disable","setDisable","useEffect","fetch","then","response","json","pickRandomCountry","countryList","randomNumber","Math","floor","random","length","forEach","country","index","randomQuestion","countryCapitalQuestion","countryFlagQuestion","className","capital","createOptions","src","flag","alt","createFalseOptions","name","push","truthy","sort","values","generateNewQuestion","Provider","value","Question","useContext","Option","bg","handleClick","cn","onClick","Card","map","option","e","target","find","disabled","ResultScreen","process","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80e7253e.chunk.js","sourcesContent":["import {createContext, useState, useEffect} from 'react';\n\nconst CountryContext = createContext();\n\n//API URL\nconst url = 'https://restcountries.eu/rest/v2/all';\n\nconst CountryContextProvider = ({children}) => {\n    //States\n    const [countries, setCountries] = useState();\n    const [question, setQuestion] = useState();\n    const [options, setOptions] = useState([]);\n    const [randomCountry, setRandomCountry] = useState();\n    const [questionIndex, setQuestionIndex] = useState(1);\n    const [trueCounter, setTrueCounter] = useState(0);\n    const [backgroundColor, setBackgroundColor] = useState('');\n    const [disable, setDisable] = useState(true);\n\n    // Get country list with fetch.\n    useEffect(() => {\n        fetch(url)\n            .then(response => response.json())\n            .then(response => setCountries(response))\n    }, [])\n\n    //Picking random country in the countries\n    const pickRandomCountry = (countryList) => {\n        const randomNumber = Math.floor(Math.random() * countryList.length);\n        countryList.forEach((country, index) => {\n            if (index === randomNumber) setRandomCountry(country);\n        })\n    };\n\n    //Generate random question . Ask country capital or country flag.\n    const randomQuestion = () => {\n        const randomBoolean = Math.random() < 0.5;\n        randomBoolean ? countryCapitalQuestion() : countryFlagQuestion();\n\n    }\n\n    const countryCapitalQuestion = () => {\n        setQuestion(<div className='question-container'><strong>{randomCountry.capital}</strong> is the capital of\n        </div>);\n        createOptions();\n    }\n\n    const countryFlagQuestion = () => {\n        setQuestion(<div className='question-container'>\n            <div className=\"image-container\">\n                <img src={randomCountry.flag} alt=\"country-flag\"/>\n            </div>\n            <h5>Which country does this flag belong to?</h5>\n        </div>)\n        createOptions();\n    }\n\n    // Create a false option.\n    const createFalseOptions = () => {\n        const options = [];\n        const randomNumber = Math.floor(Math.random() * countries.length);\n        countries.forEach((country, index) => {\n            if (index === randomNumber && randomCountry.name !== country.name) options.push(country.name)\n        })\n        return options[0];\n    }\n\n    //Create options.\n    const createOptions = () => {\n        setOptions([\n            {\n                name: randomCountry.name,\n                truthy: true,\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            },\n            {\n                name: createFalseOptions(),\n                truthy: false\n            }\n        ].sort(() => .5 - Math.random()));\n    }\n\n    // Generate new question.\n    const generateNewQuestion = () => {\n        setBackgroundColor('');\n        setDisable(!disable);\n        setQuestionIndex(questionIndex + 1);\n        pickRandomCountry(countries);\n        randomQuestion();\n    }\n\n\n    const values = {\n        countries, question, options, setQuestion, setOptions, pickRandomCountry, randomCountry,\n        setRandomCountry, randomQuestion, trueCounter, setTrueCounter, questionIndex, setQuestionIndex,\n        backgroundColor, setBackgroundColor, generateNewQuestion, disable, setDisable\n    }\n\n    return (\n        <CountryContext.Provider value={values}>\n            {children}\n        </CountryContext.Provider>\n    );\n};\n\nexport {CountryContext, CountryContextProvider}\n\n","import {useContext, useEffect} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css'\n\nconst Question = () => {\n    const {randomQuestion, question} = useContext(CountryContext)\n    useEffect(() => {\n        randomQuestion();\n    }, [])\n\n    if (!question) return <div>Loading...</div>;\n\n    return (\n        <div className=\"question\">\n            {question}\n        </div>\n    );\n};\n\nexport default Question;\n","import './index.css';\nimport cn from 'classnames';\n\nconst Option = ({children, bg, truthy, handleClick}) => {\n\n\n    return (\n        <div className='options-container'>\n            <button className={cn(truthy ? bg : '', 'option')} onClick={handleClick}>{children}</button>\n        </div>\n    );\n};\n\nexport default Option;\n","import {useContext, useEffect, useState} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css';\nimport Question from \"../Question\";\nimport Option from \"../Option\";\n\nconst Card = () => {\n\n    const {\n        pickRandomCountry, countries, randomCountry,\n        options, trueCounter, setTrueCounter,\n        setBackgroundColor, generateNewQuestion, backgroundColor, disable, setDisable\n    } = useContext(CountryContext);\n\n\n    useEffect(() => {\n\n        pickRandomCountry(countries);\n\n    }, [options]);\n\n    const handleClick = (truthy, e) => {\n\n        if (disable) setDisable(!disable);\n\n        if (truthy) {\n            e.target.className = 'true-option';\n            setTrueCounter(trueCounter + 1)\n        } else {\n            e.target.className = 'false-option';\n            options.find((option) => {\n                if (option.truthy) setBackgroundColor('true-option');\n            })\n        }\n    }\n\n    if (!randomCountry) return <div>Loading...</div>;\n\n    return (\n        <div className=\"card\">\n            <h1> COUNTRY QUIZ</h1>\n            <div className=\"container\">\n                <Question/>\n                {\n                    options\n                        .map(option => <Option key={option.name}\n                                               bg={backgroundColor}\n                                               handleClick={(e) => handleClick(option.truthy, e)}\n                                               truthy={option.truthy}>{option.name}\n                        </Option>)\n                }\n                <div className=\"button-container\">\n                    <button disabled={disable} onClick={generateNewQuestion}>Next</button>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import {useContext, useEffect} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\nimport './index.css';\n\n\nconst ResultScreen = () => {\n\n    const {trueCounter, generateNewQuestion, setTrueCounter, setQuestionIndex, setDisable} = useContext(CountryContext);\n\n    useEffect(() => {\n        return () => {\n            setQuestionIndex(1);\n            setDisable(true);\n        }\n    }, [])\n\n    const handleClick = () => {\n        generateNewQuestion();\n        setTrueCounter(0);\n    }\n    return (\n        <div className='result-screen'>\n            <img src={process.env.PUBLIC_URL + '/assets/celebrate.svg'} alt='score'/>\n            <h4 className=\"score-text\">You got <span>{trueCounter}</span> correct answer</h4>\n            <button onClick={handleClick}>PLAY AGAIN</button>\n        </div>\n    );\n};\n\nexport default ResultScreen;\n","import Card from \"../Card\";\nimport ResultScreen from \"../ResultScreen\";\nimport './index.css';\n\nimport {useContext} from 'react';\nimport {CountryContext} from \"../../contexts/CountyContext\";\n\nconst App = () => {\n\n    const {countries, questionIndex} = useContext(CountryContext);\n\n    if (!countries) return <div>Loading...</div>\n\n    return (\n        <div className='app'>\n            {\n                questionIndex === 6\n                    ? <ResultScreen/>\n                    : <Card/>\n            }\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {CountryContextProvider} from './contexts/CountyContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CountryContextProvider>\n            <App/>\n        </CountryContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}